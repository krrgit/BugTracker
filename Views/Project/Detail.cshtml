@using BugTracker.Data.Enum;
@using BugTracker.Extensions;
@using BugTracker.ViewModels;
@model ProjectDetailViewModel
@{
	ViewData["Title"] = Model.Title;
}
<div class="d-flex flex-column">
<div>

<div class="d-flex align-items-center mb-2"> 
	<h2 class="d-inline">@Model.Title</h2>
	<a asp-controller="Project" asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-sm btn-outline-secondary mx-3">Edit</a>
</div>
<blockquote class="blockquote my-0">
  <p>@Model.Description</p>
</blockquote>
</div>
<hr/> 

<div class="row">
<!-- Tickets -->
 <div class="col-9">
 <h3>Tickets</h3>

<div class="list-group mb-2">
	<!--Header-->
	<a class="list-group-item disabled">
		<div class="d-flex gap-2 w-100 justify-content-between">
			<div>
				<h6 class="mb-0">options</h6>
			</div>
		</div>
	</a>
	<!--Tickets List-->

	@foreach (var item in Model.Tickets)
	{
					<input type="hidden" name="id" value="@item.Id" />
						<a  asp-controller="Ticket" asp-action="Detail" asp-route-id="@item.Id" class="list-group-item list-group-item-action d-flex gap-3 py-2" aria-current="true">
					@*<img src="https://github.com/twbs.png" alt="twbs" width="32" height="32" class="rounded-circle flex-shrink-0">*@
					<div class="d-flex gap-2 w-100 justify-content-between">
						<div>
							<h6 class="mb-2">
								<div> 
										<span class="badge bg-black">@(((TicketType)item.Type).GetDescription())</span>
									<p class="h5 d-inline">@item.Title</p>
									<span class="badge bg-@item.Priority.Value">@item.Priority</span>
									<span class="badge bg-@item.Status.Value">@(((TicketStatus)item.Status).GetDescription())</span>
								</div>
							</h6>
							<small class="mb-1 opacity-75">@item.Description.Truncate(100)</small>
							<div class="d-flex flex-row">
								@if(item.AssignedDev != null)
								{
											<small class="mb-0 opacity-75">Assigned to: @item.AssignedDev.FullName()</small>
								} else
								{
											<small class="mb-0 opacity-75">Assigned to: none</small>
								}
								@if (item.Author != null)
								{
											<small class="mx-1 mb-0 opacity-75"> • Posted by: @item.Author.FullName()</small>
								}
								else
								{
											<small class="mx-1 mb-0 opacity-75"> • Posted by: </small>
								}
								</div>
						</div>
								<div class="d-flex align-items-end flex-column">
							<div><small class="opacity-50 text-nowrap">@item.UpdatedAt</small></div>
							<!-- Ticket Buttons-->
								<div class="btn-group justify-content-end" role="group" aria-label="Basic example">
									<form method="get" action="@Url.Action("Edit", "Ticket")" class="form-check-inline p-0 mx-0">
									<input type="hidden" name="id" value="@item.Id" />
									<input type="submit" class="btn btn-outline-secondary btn-sm" class="form-check-inline p-0 mx-0" value="Edit">
									</form>
									<form method="get" action="@Url.Action("Delete", "Ticket")" class="form-check-inline p-0 mx-0">
										<input type="hidden" name="id[0]" value="@item.Id" />
										<input type="hidden" name="id[1]" value="@Model.Id" />
											<input type="submit" class="btn btn-outline-danger btn-sm" class="form-check-inline p-0 mx-0" value="Delete">
									</form>
							</div>
						</div>
					</div>
				</a>
	}
</div>
<a asp-controller="Ticket" asp-action="Create" asp-route-id="@Model.Id" class="btn btn-primary">Add New Ticket</a>
</div>

<!-- Team -->
<div class="col-3">
<h3>Team</h3>
<ul class="list-group list-group-flush mb-2">
	@foreach (var item in Model.Members)
	{
			<li class="list-group-item d-flex gap-2 w-100 justify-content-between">
			@item.FirstName @item.LastName
			<div>
				<small class="opacity-50 text-nowrap">@item.Role</small>
					<form method="post" action="@Url.Action("Remove", "ProjectMember")" class="form-check-inline p-0 mx-0">
							<input type="hidden" name="appUserId" value="@item.Id" />
								<input type="hidden" name="projectId" value="@Model.Id" />
							<button type="submit" class="btn btn-close btn-sm" class="form-check-inline p-0 mx-0"></button>
					</form>
			</div>
					
		</li>
	}
</ul>
<!-- Button trigger modal -->
<div class="btn-group btn-group-toggle d-flex gap-2 w-100 justify-content-between" data-toggle="buttons">
	<div>
		<button type="button" class="btn btn-primary btn-sm" data-bs-toggle="modal" data-bs-target="#memberModal"><b>+</b> Member</button>
	</div>
	<div>
	<form method="get" action="@Url.Action("Manage", "ProjectMember")" class="form-check-inline p-0 mx-0">
		<button type="submit" class="btn btn-secondary btn-sm" class="form-check-inline p-0 mx-0">Manage</button>
	</form>
	</div>
</div>
</div>
</div>

<!-- Add Member Modal -->
<div class="modal fade" id="memberModal" tabindex="-1" aria-labelledby="memberModalLabel" aria-hidden="true">
  <div class="modal-dialog">
	<div class="modal-content">
	  <div class="modal-header">
		<h5 class="modal-title" id="memberModalLabel">Add Member(s)</h5>
		<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
	  </div>
	  <form method="post" action="@Url.Action("Add", "ProjectMember")" enctype="multipart/form-data">
		  <input type="hidden" asp-for="@Model.Id"/>
		<div class="modal-body">
		<div class="container">
			<input class="form-control" id="listSearch" type="text" placeholder="Search">
			<br>
			<div class="list-group" id="myList">
					@for (int i = 0; i < Model.AppUsers.Count; ++i)
					{
						<div class="form-group">
								<label class="list-group-item d-flex gap-2 w-100 justify-content-between">
								<input type="hidden" asp-for="@Model.AppUsers[i].Id"/>
										@Model.AppUsers[i].FirstName @Model.AppUsers[i].LastName
								<input type="checkbox" asp-for="@Model.AppUsers[i].IsSelected" class="form-check-input flex-shrink-0">
							</label>
						</div>
					}
			</div>
		</div>
		<br>
	</div>
	<div class="modal-footer">
		<button type="submit" class="btn btn-primary">Add</button>
	</div>
	</form>
	</div>
  </div>
</div>

</div>

@section Scripts
{
	<script type="text/javascript">
		$(document).ready(function(){
			$("#listSearch").on("keyup", function() {
				var value = $(this).val().toLowerCase();
					$("#myList label").filter(function() {
					$(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
				});
			});
		});
	</script>
}