@using BugTracker.Data.Enum;
@using BugTracker.Extensions;
@using BugTracker.Models;
@model Ticket
@{
    ViewData["Title"] = @Model.Title;
}

<div class="row d-flex justify-content-center">
    <div class="list-group mb-2 col-md-8">
        <div class="list-group-item d-flex justify-content-between align-items-center">
            <div>
                <h6 class="mb-1"><a asp-controller="Project" asp-action="Detail" asp-route-id="@Model.ProjectId">< Project @Model.ProjectId</a></h6>
            </div>
            <div class="opacity-75"><small class="d-flex flex-row align-items-center">Posted by: @if (@Model.Author != null)
                    {
                            <p class="m-0 py-0 px-1">@Model.Author.FullName()</p>
                    }</small></div>
            <div class="opacity-75"><small>Created: @Model.CreatedAt</small></div>
        </div>
        <!-- Body -->
        <div class="list-group-item d-flex flex-column">
            <h4 class="pt-2 pb-0 m-0">@Model.Title</h4>
            <div class="d-flex gap-2 pb-3">
                <span class="badge bg-black">@(((TicketType)Model.Type).GetDescription())</span>
                <span class="badge bg-@Model.Priority.Value">@Model.Priority</span>
                <span class="badge bg-@Model.Status.Value">@(((TicketStatus)Model.Status).GetDescription())</span>
            </div>
            <p>@Model.Description</p>
        </div>
        <!-- Footer -->
        <div class="list-group-item d-flex justify-content-between align-items-center">     
            <div >
                <div class="opacity-75">
                    <small class="d-flex flex-row align-items-center">
                       Assigned to:
                       @if (@Model.AssignedDev != null)
                        {
                                <p class="m-0 py-0 px-1">@Model.AssignedDev.FullName()</p>
                        }
                    </small>
                </div>
            </div>
            <div class="btn-group justify-content-end" role="group" aria-label="Basic example">
                <div class="dropdown">
                    <button class="btn btn-primary btn-sm dropdown-toggle" type="button" id="dropdownMenuButton1" data-bs-toggle="dropdown" aria-expanded="false">
                    Mark As...
                    </button>
                    <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton1" >  
                        @foreach (var item in Html.GetEnumSelectList<TicketStatus>())
                        {
                            <li><button class="dropdown-item" onclick="setStatus('@item.Value')" id="btnSubmit">@item.Text</button></li>
                        }
                    </ul>
                </div>
                <form method="get" action="@Url.Action("Edit", "Ticket")" class="form-check-inline p-0 mx-0">
                    <input type="hidden" name="id" value="@Model.Id" />
                    <input type="submit" class="btn btn-secondary btn-sm" class="form-check-inline p-0 mx-0" value="Edit">
                    </form>
                    <form method="get" action="@Url.Action("Delete", "Ticket")" class="form-check-inline p-0 mx-0">
                        <input type="hidden" name="id[0]" value="@Model.Id" />
                        <input type="hidden" name="id[1]" value="@Model.Id" />
                        <input type="submit" class="btn btn-danger btn-sm" class="form-check-inline p-0 mx-0" value="Delete">
                    </form>
            </div>
        </div>
    </div>
</div>

<!-- Hidden form for "Mark As..." button-->
<form id="statusForm" method="post" asp-action="Edit" enctype="multipart/form-data">
<input type="hidden" asp-for="@Model.Id" />
<input type="hidden" asp-for="@Model.ProjectId" />
<input type="hidden" asp-for="@Model.Title" />
<input type="hidden" asp-for="@Model.Description" />
<input type="hidden" asp-for="@Model.Priority" />
<input type="hidden" asp-for="@Model.Type" />
<input type="hidden" id="Status" name="Status" value='@Model.Status'/>
    @if (Model.AssignedDev != null)
    {
                            <input type="hidden" id="AssignedDevId" value="@Model.AssignedDev.Id" />
    }
    @if (Model.Author != null)
    {
                            <input type="hidden" id="AuthorId" value="@Model.Author.Id" />
    }
</form>

@section Scripts
{
<script>
 function setStatus(value) {
    const form = document.getElementById('statusForm');
    form["Status"].value = value;
    document.getElementById('statusForm').submit();
 }
</script>
}
